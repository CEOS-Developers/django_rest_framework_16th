# Generated by Django 3.0.8 on 2022-11-12 03:20

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('color', models.IntegerField(default=0)),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diary',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('diary_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=400)),
                ('emoji', models.CharField(max_length=20)),
                ('public', models.IntegerField(default=0)),
                ('date', models.DateField(default=datetime.datetime(2022, 11, 12, 3, 20, 14, 951642, tzinfo=utc))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('todo_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_success', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=False)),
                ('deadline', models.DateField(default=datetime.datetime(2022, 11, 12, 3, 20, 14, 951101, tzinfo=utc))),
                ('alarm', models.DateTimeField(null=True)),
                ('content', models.CharField(max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(default=None, null=True)),
                ('email', models.CharField(max_length=30, unique=True)),
                ('nickname', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=30)),
                ('introduce', models.CharField(max_length=200)),
                ('image', models.TextField(default=None)),
                ('is_public', models.BooleanField(default=False)),
                ('search', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TodoLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=20)),
                ('todo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_todo', to='api.Todo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_todo_user', to='api.User')),
            ],
        ),
        migrations.AddField(
            model_name='todo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todo_user', to='api.User'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to='api.User')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='DiaryLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=20)),
                ('diary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_diary', to='api.Diary')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_diary_user', to='api.User')),
            ],
        ),
        migrations.AddField(
            model_name='diary',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diary_user', to='api.User'),
        ),
        migrations.AddField(
            model_name='category',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_user', to='api.User'),
        ),
    ]
